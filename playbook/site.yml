---
- name: Install Clickhouse
  hosts: clickhouse_servers
  become: true
  vars_files:
    - group_vars/clickhouse/vars.yml
    - vault.yml
      
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted

  tasks:
    - block:
        - name: clickhouse-client
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-client-{{ clickhouse_version }}.noarch.rpm"
            dest: "./clickhouse-client-{{ clickhouse_version }}.noarch.rpm"
            validate_certs: false
            
        - name: clickhouse-server
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-server-{{ clickhouse_version }}.noarch.rpm"
            dest: "./clickhouse-server-{{ clickhouse_version }}.noarch.rpm"
            validate_certs: false
            
        - name: clickhouse-common-static
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
            validate_certs: false

    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.noarch.rpm
          - clickhouse-server-{{ clickhouse_version }}.noarch.rpm
      notify: Start clickhouse service

    - name: Flush handlers
      meta: flush_handlers

    - name: Check if clickhouse-server is running
      become: true
      ansible.builtin.service_facts:
      register: service_state

    - name: Ensure clickhouse-server is running
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: started
      when: "'clickhouse-server' not in service_state or service_state['clickhouse-server'].state != 'running'"

    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0

- name: Install Vector
  hosts: vector_servers
  become: true
  vars_files:
    - group_vars/vector/vars.yml
    - vault.yml

  tasks:
    - name: Download Vector binary
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-x86_64-unknown-linux-musl.tar.gz"
        dest: "/tmp/vector-{{ vector_version }}.tar.gz"
        validate_certs: false

    - name: Extract Vector binary
      ansible.builtin.unarchive:
        src: "/tmp/vector-{{ vector_version }}.tar.gz"
        dest: "/opt"
        remote_src: true

    - name: Create symlink for Vector
      ansible.builtin.file:
        src: "/opt/vector-{{ vector_version }}-x86_64-unknown-linux-musl/bin/vector"
        dest: "/usr/local/bin/vector"
        state: link
        force: yes
        follow: false

    - name: Create Vector configuration directory
      ansible.builtin.file:
        path: "/etc/vector"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Deploy Vector configuration file
      ansible.builtin.template:
        src: "templates/vector.toml.j2"
        dest: "/etc/vector/vector.toml"
        owner: root
        group: root
        mode: '0644'

    - name: Create Vector service unit file
      ansible.builtin.template:
        src: "templates/vector.service.j2"
        dest: "/etc/systemd/system/vector.service"
        owner: root
        group: root
        mode: '0644'

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Ensure Vector service is running
      ansible.builtin.systemd:
        name: vector
        state: started
        enabled: yes